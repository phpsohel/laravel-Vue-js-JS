//Laratrast :

 composer require spatie/laravel-permission

//config/app.php file:

'providers' => [
    // ...
    Spatie\Permission\PermissionServiceProvider::class,
];

//You should publish the migration and the config/permission.php config file with:

php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"

 php artisan optimize:clear
 # or
 php artisan config:clear

 php artisan migrate

//Model-->User.php
===========================

se Illuminate\Foundation\Auth\User as Authenticatable;
use Spatie\Permission\Traits\HasRoles;

class User extends Authenticatable
{
    use HasApiTokens, HasFactory, Notifiable, HasRoles;
}

=======================================================================================
//Seeder Create:
======================
php artisan make:seed RolePermissionSeeder
php artisan make:seed UserSeeder

//DatabaseSeeder.php
===========================
use Illuminate\Database\Seeder;
use Illuminate\Database\RolePermissionSeeder;
public function run()
    {
	$this->call(UserSeeder::class);
 	$this->call(RolePermissionSeeder::class);
    }

// UserSeeder.php
=======================
use App\Models\User;
public function run()
    {
       User::create([ //Model User Input
            'name' => 'Hardik',
            'email' => 'admin@gmail.com',
            'password' => bcrypt('admin123'),
        ]);
    }

//Seeder migrate Comand:
============================
php artisan db:seed

//RolePermissionSeeder.php
===============================
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
===================================================================================================
//Middleware->kernal.php
==============================
protected $routeMiddleware = [
    // ...
    'role' => \Spatie\Permission\Middlewares\RoleMiddleware::class,
    'permission' => \Spatie\Permission\Middlewares\PermissionMiddleware::class,
    'role_or_permission' => \Spatie\Permission\Middlewares\RoleOrPermissionMiddleware::class,
];

//Seeder Create:
php artisan make:seeder RoleSeeder
php artisan make:seeder AdminSeeder

//Roleseeder.php
======================
use Spatie\Permission\Models\Role;
public function run()
    {
        Role::create(['name' => 'admin']);
        Role::create(['name' => 'writer']);
        Role::create(['name' => 'user']);
    }
}

//AdminSeeder.php
======================
use App\Models\User;
public function run()
    {
        User::create([
             'name' => 'admin',
             'email'    => 'admin@email.com',
            'password' => bcrypt(['admin123'])
        ]);
    }













